
/*
 	基本思想:
 		直接插入排序和玩扑克牌很相似，右手抓取一张扑克牌，并把它插入左手拿着的排好序的扑克里面。
 		假如从小到大进行排序，从第二个元素开始，比较其与前面子列中元素的大小，如果找到第一个比它小的元素那么就将它插入到该元素之后，以此类推。
  		
  		比如下面的一个数组：
 		12，8，2，7，15，6，4，11
       	假如从小到大进行排序，从第二个元素开始，比较其与前面子列中元素的大小，如果找到第一个比它小的元素那么就将它插入到该元素之后，以此类推。

		第一次的结果：8，12，2，7，15，6，4，11
		对应的操作：8与12进行过比较，8小于12，于是将8放到12前面，成为第一个元素，前两个元素有序。
        
		第二次的结果：2，8，12，7，15，6，4，11
		对应的操作：2小于12，2小于8，于是2放到8前面，成为第一个元素，前三个元素有序。
        
		第三次的结果：2，7，8，12，15，6，4，11
		对应的操作：7小于12，7小于8，7大于2，于是7放到2后面，前四个元素有序。
        
		第四次的结果：2，7，8，12，15，6，4，11
		对应的操作：15大于12，不动，前五个元素有序。
       
		第五次的结果：2，6，7，8，12，15，4，11
		对应的操作：6小于15，6小于12，6小于8，6小于7，6大于2，于是6放到2后面，前六个元素有序。
        
		第六次的结果：2，4，6，7，8，12，15，11
		对应的操作：4小于15，4小于12，4小于8，4小于7，4小于6，4大于2，于是4放到2后面，前七个元素有序。
        
		第七次的结果：2，4，6，7，8，11，12，15
		对应的操作：11小于15，11小于12，11大于8，于是11放到8后面，排序完成。
 	
 */

public class Demo6 {
	public static void main(String[] args) {

		int[] a = { 12, 8, 2, 7, 15, 6, 4, 11 };
		insertionSort(a);
		for (int i : a)
			System.out.print(i + " ");
	}

	public static void insertionSort(int[] a) {
		for (int i = 1; i < a.length; i++) { // 从第二个数开始，第一个数没意义比较
			int temp = a[i]; // 拿出要比较的数
			int j = 0;
			for (j = i - 1; j >= 0; j--) { // i位置之前是已经排好了的，从后往前比较
				if (a[j] > temp) { // 一次比较i位置之前的数，如果比要比较的数小，则把j这个位置的数往后移
					a[j + 1] = a[j];
				} else {
					break;
				}
			}
			a[j + 1] = temp;// 前面往后移只是依次赋值，最后要还要等一轮比较后，再把要比较的值放入合适的位置，不然会出现重复出现一样的值
		}
	}
}
